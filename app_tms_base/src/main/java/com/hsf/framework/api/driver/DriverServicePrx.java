// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `driver.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.hsf.framework.api.driver;

/**
 * 司机app服务
 **/
public interface DriverServicePrx extends Ice.ObjectPrx
{
    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     **/
    public DriverBase driverLogin(String phone, String pw);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __ctx The Context map to send with the invocation.
     **/
    public DriverBase driverLogin(String phone, String pw, java.util.Map<String, String> __ctx);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, String pw);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, String pw, java.util.Map<String, String> __ctx);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, String pw, Ice.Callback __cb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, String pw, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, String pw, Callback_DriverService_driverLogin __cb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, String pw, java.util.Map<String, String> __ctx, Callback_DriverService_driverLogin __cb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, 
                                             String pw, 
                                             IceInternal.Functional_GenericCallback1<DriverBase> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, 
                                             String pw, 
                                             IceInternal.Functional_GenericCallback1<DriverBase> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, 
                                             String pw, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<DriverBase> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverLogin(String phone, 
                                             String pw, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<DriverBase> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 司机登录
     * phone: 司机登录电话号码
     * pw:司机密码(MD5加密)
     * 请判断角色码
     * @param __result The asynchronous result object.
     **/
    public DriverBase end_driverLogin(Ice.AsyncResult __result);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     **/
    public int driverChangePw(String phone, String opw, String npw);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __ctx The Context map to send with the invocation.
     **/
    public int driverChangePw(String phone, String opw, String npw, java.util.Map<String, String> __ctx);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, String opw, String npw);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, String opw, String npw, java.util.Map<String, String> __ctx);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, String opw, String npw, Ice.Callback __cb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, String opw, String npw, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, String opw, String npw, Callback_DriverService_driverChangePw __cb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, String opw, String npw, java.util.Map<String, String> __ctx, Callback_DriverService_driverChangePw __cb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, 
                                                String opw, 
                                                String npw, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, 
                                                String opw, 
                                                String npw, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, 
                                                String opw, 
                                                String npw, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverChangePw(String phone, 
                                                String opw, 
                                                String npw, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_IntCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 司机修改密码
     * phone:司机手机号码
     * opw:旧密码(MD5加密)
     * npw:新密码(MD5加密)
     * @param __result The asynchronous result object.
     **/
    public int end_driverChangePw(Ice.AsyncResult __result);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     **/
    public DriverCompInfo[] driverQueryCompList(int userid);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __ctx The Context map to send with the invocation.
     **/
    public DriverCompInfo[] driverQueryCompList(int userid, java.util.Map<String, String> __ctx);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, java.util.Map<String, String> __ctx);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, Ice.Callback __cb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, Callback_DriverService_driverQueryCompList __cb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, java.util.Map<String, String> __ctx, Callback_DriverService_driverQueryCompList __cb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, 
                                                     IceInternal.Functional_GenericCallback1<DriverCompInfo[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, 
                                                     IceInternal.Functional_GenericCallback1<DriverCompInfo[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<DriverCompInfo[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryCompList(int userid, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<DriverCompInfo[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据 用户ID 查询其 所属全部企业列表信息
     * userid 用户ID
     * @param __result The asynchronous result object.
     **/
    public DriverCompInfo[] end_driverQueryCompList(Ice.AsyncResult __result);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     **/
    public OrderInfo[] driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __ctx The Context map to send with the invocation.
     **/
    public OrderInfo[] driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range, java.util.Map<String, String> __ctx);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range, java.util.Map<String, String> __ctx);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range, Ice.Callback __cb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range, Callback_DriverService_driverQueryOrderList __cb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, int enterpriseid, int state, int year, int index, int range, java.util.Map<String, String> __ctx, Callback_DriverService_driverQueryOrderList __cb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, 
                                                      int enterpriseid, 
                                                      int state, 
                                                      int year, 
                                                      int index, 
                                                      int range, 
                                                      IceInternal.Functional_GenericCallback1<OrderInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, 
                                                      int enterpriseid, 
                                                      int state, 
                                                      int year, 
                                                      int index, 
                                                      int range, 
                                                      IceInternal.Functional_GenericCallback1<OrderInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, 
                                                      int enterpriseid, 
                                                      int state, 
                                                      int year, 
                                                      int index, 
                                                      int range, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<OrderInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderList(int userid, 
                                                      int enterpriseid, 
                                                      int state, 
                                                      int year, 
                                                      int index, 
                                                      int range, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<OrderInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据 用户码 ,企业码 ,指定的订单状态 , 获取订单列表 - 简单信息
     * userid 用户码
     * enterpriseid 企业码
     * state 查询的状态值
     * return 订单对象数组 (包含订单简略信息)
     * @param __result The asynchronous result object.
     **/
    public OrderInfo[] end_driverQueryOrderList(Ice.AsyncResult __result);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     **/
    public OrderComplex driverQueryOrderInfo(int userid, int enterpriseid, long orderNo);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     **/
    public OrderComplex driverQueryOrderInfo(int userid, int enterpriseid, long orderNo, java.util.Map<String, String> __ctx);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, int enterpriseid, long orderNo);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, int enterpriseid, long orderNo, java.util.Map<String, String> __ctx);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, int enterpriseid, long orderNo, Ice.Callback __cb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, int enterpriseid, long orderNo, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, int enterpriseid, long orderNo, Callback_DriverService_driverQueryOrderInfo __cb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, int enterpriseid, long orderNo, java.util.Map<String, String> __ctx, Callback_DriverService_driverQueryOrderInfo __cb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, 
                                                      int enterpriseid, 
                                                      long orderNo, 
                                                      IceInternal.Functional_GenericCallback1<OrderComplex> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, 
                                                      int enterpriseid, 
                                                      long orderNo, 
                                                      IceInternal.Functional_GenericCallback1<OrderComplex> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, 
                                                      int enterpriseid, 
                                                      long orderNo, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<OrderComplex> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderInfo(int userid, 
                                                      int enterpriseid, 
                                                      long orderNo, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<OrderComplex> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询单个订单的详情信息
     * enterpriseid 企业号
     * info 订单对象
     * @param __result The asynchronous result object.
     **/
    public OrderComplex end_driverQueryOrderInfo(Ice.AsyncResult __result);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     **/
    public int driverQueryOrderState(int enterpriseid, long orderNo);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     **/
    public int driverQueryOrderState(int enterpriseid, long orderNo, java.util.Map<String, String> __ctx);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, long orderNo);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, long orderNo, java.util.Map<String, String> __ctx);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, long orderNo, Ice.Callback __cb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, long orderNo, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, long orderNo, Callback_DriverService_driverQueryOrderState __cb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, long orderNo, java.util.Map<String, String> __ctx, Callback_DriverService_driverQueryOrderState __cb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, 
                                                       long orderNo, 
                                                       IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, 
                                                       long orderNo, 
                                                       IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, 
                                                       long orderNo, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverQueryOrderState(int enterpriseid, 
                                                       long orderNo, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_IntCallback __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询单个订单的状态
     * enterpriseid 企业号
     * info 订单对象
     * @param __result The asynchronous result object.
     **/
    public int end_driverQueryOrderState(Ice.AsyncResult __result);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     **/
    public boolean driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state, java.util.Map<String, String> __ctx);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state, java.util.Map<String, String> __ctx);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state, Ice.Callback __cb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state, Callback_DriverService_driverOrderStateOp __cb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, int enterpriseid, long orderNo, int state, java.util.Map<String, String> __ctx, Callback_DriverService_driverOrderStateOp __cb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, 
                                                    int enterpriseid, 
                                                    long orderNo, 
                                                    int state, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, 
                                                    int enterpriseid, 
                                                    long orderNo, 
                                                    int state, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, 
                                                    int enterpriseid, 
                                                    long orderNo, 
                                                    int state, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverOrderStateOp(int userid, 
                                                    int enterpriseid, 
                                                    long orderNo, 
                                                    int state, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 对订单进行状态修改操作
     * userid 用户码 - 在取货时需要与用户码绑定
     * enterpriseid 企业号
     * info 订单号
     * state 需要修改的状态
     * 操作成功返回true
     * @param __result The asynchronous result object.
     **/
    public boolean end_driverOrderStateOp(Ice.AsyncResult __result);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     **/
    public boolean driverSureOrderFee(int enterpriseid, long orderNo, double fee);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean driverSureOrderFee(int enterpriseid, long orderNo, double fee, java.util.Map<String, String> __ctx);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, long orderNo, double fee);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, long orderNo, double fee, java.util.Map<String, String> __ctx);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, long orderNo, double fee, Ice.Callback __cb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, long orderNo, double fee, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, long orderNo, double fee, Callback_DriverService_driverSureOrderFee __cb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, long orderNo, double fee, java.util.Map<String, String> __ctx, Callback_DriverService_driverSureOrderFee __cb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, 
                                                    long orderNo, 
                                                    double fee, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, 
                                                    long orderNo, 
                                                    double fee, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, 
                                                    long orderNo, 
                                                    double fee, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverSureOrderFee(int enterpriseid, 
                                                    long orderNo, 
                                                    double fee, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_BoolCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 通知订单 修改金额
     * enterpriseid 企业号
     * info 订单对象
     * 操作成功返回true
     * @param __result The asynchronous result object.
     **/
    public boolean end_driverSureOrderFee(Ice.AsyncResult __result);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     **/
    public int driverUploadOriginal(int userid, int enterpriseid, long orderid, String json);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     **/
    public int driverUploadOriginal(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, int enterpriseid, long orderid, String json);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, int enterpriseid, long orderid, String json, Ice.Callback __cb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, int enterpriseid, long orderid, String json, Callback_DriverService_driverUploadOriginal __cb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx, Callback_DriverService_driverUploadOriginal __cb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, 
                                                      int enterpriseid, 
                                                      long orderid, 
                                                      String json, 
                                                      IceInternal.Functional_IntCallback __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, 
                                                      int enterpriseid, 
                                                      long orderid, 
                                                      String json, 
                                                      IceInternal.Functional_IntCallback __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, 
                                                      int enterpriseid, 
                                                      long orderid, 
                                                      String json, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_IntCallback __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadOriginal(int userid, 
                                                      int enterpriseid, 
                                                      long orderid, 
                                                      String json, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_IntCallback __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据  用户码 ,企业编号,订单号,上传用户 原始行驶轨迹点 JSON 数据 0成功
     * @param __result The asynchronous result object.
     **/
    public int end_driverUploadOriginal(Ice.AsyncResult __result);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     **/
    public int driverUploadCorrect(int userid, int enterpriseid, long orderid, String json);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     **/
    public int driverUploadCorrect(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, int enterpriseid, long orderid, String json);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, int enterpriseid, long orderid, String json, Ice.Callback __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, int enterpriseid, long orderid, String json, Callback_DriverService_driverUploadCorrect __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, int enterpriseid, long orderid, String json, java.util.Map<String, String> __ctx, Callback_DriverService_driverUploadCorrect __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, 
                                                     int enterpriseid, 
                                                     long orderid, 
                                                     String json, 
                                                     IceInternal.Functional_IntCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, 
                                                     int enterpriseid, 
                                                     long orderid, 
                                                     String json, 
                                                     IceInternal.Functional_IntCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, 
                                                     int enterpriseid, 
                                                     long orderid, 
                                                     String json, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_IntCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadCorrect(int userid, 
                                                     int enterpriseid, 
                                                     long orderid, 
                                                     String json, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_IntCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 纠偏行驶轨迹点 JSON 数据 0成功
     * @param __result The asynchronous result object.
     **/
    public int end_driverUploadCorrect(Ice.AsyncResult __result);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     **/
    public int driverUploadNode(int userid, int enterpriseid, long orderid, String node);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     **/
    public int driverUploadNode(int userid, int enterpriseid, long orderid, String node, java.util.Map<String, String> __ctx);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, int enterpriseid, long orderid, String node);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, int enterpriseid, long orderid, String node, java.util.Map<String, String> __ctx);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, int enterpriseid, long orderid, String node, Ice.Callback __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, int enterpriseid, long orderid, String node, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, int enterpriseid, long orderid, String node, Callback_DriverService_driverUploadNode __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, int enterpriseid, long orderid, String node, java.util.Map<String, String> __ctx, Callback_DriverService_driverUploadNode __cb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, 
                                                  int enterpriseid, 
                                                  long orderid, 
                                                  String node, 
                                                  IceInternal.Functional_IntCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, 
                                                  int enterpriseid, 
                                                  long orderid, 
                                                  String node, 
                                                  IceInternal.Functional_IntCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, 
                                                  int enterpriseid, 
                                                  long orderid, 
                                                  String node, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_IntCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_driverUploadNode(int userid, 
                                                  int enterpriseid, 
                                                  long orderid, 
                                                  String node, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_IntCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 根据用户订单号 ,用户码 ,企业编号 ,上传用户 走货节点信息 JSON 数据 0成功
     * @param __result The asynchronous result object.
     **/
    public int end_driverUploadNode(Ice.AsyncResult __result);

    /**
     * 获取上传文件的文件夹路径
     **/
    public String getUploadPath(String compid, String orderno);

    /**
     * 获取上传文件的文件夹路径
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getUploadPath(String compid, String orderno, java.util.Map<String, String> __ctx);

    /**
     * 获取上传文件的文件夹路径
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, String orderno);

    /**
     * 获取上传文件的文件夹路径
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, String orderno, java.util.Map<String, String> __ctx);

    /**
     * 获取上传文件的文件夹路径
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, String orderno, Ice.Callback __cb);

    /**
     * 获取上传文件的文件夹路径
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, String orderno, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取上传文件的文件夹路径
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, String orderno, Callback_DriverService_getUploadPath __cb);

    /**
     * 获取上传文件的文件夹路径
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, String orderno, java.util.Map<String, String> __ctx, Callback_DriverService_getUploadPath __cb);

    /**
     * 获取上传文件的文件夹路径
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, 
                                               String orderno, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 获取上传文件的文件夹路径
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, 
                                               String orderno, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 获取上传文件的文件夹路径
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, 
                                               String orderno, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 获取上传文件的文件夹路径
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getUploadPath(String compid, 
                                               String orderno, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 获取上传文件的文件夹路径
     * @param __result The asynchronous result object.
     **/
    public String end_getUploadPath(Ice.AsyncResult __result);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     **/
    public String getFileServer();

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __ctx The Context map to send with the invocation.
     **/
    public String getFileServer(java.util.Map<String, String> __ctx);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer();

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(java.util.Map<String, String> __ctx);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(Ice.Callback __cb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(Callback_DriverService_getFileServer __cb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(java.util.Map<String, String> __ctx, Callback_DriverService_getFileServer __cb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_getFileServer(java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 获取文件上传,文件下载前缀信息 例如: JSON: {'fileUpload':'http://ip:port/path' , 'fileLoad:':'http://ip:port/path'}
     * @param __result The asynchronous result object.
     **/
    public String end_getFileServer(Ice.AsyncResult __result);
}
