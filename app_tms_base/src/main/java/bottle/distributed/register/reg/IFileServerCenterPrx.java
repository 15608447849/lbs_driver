// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `file_service_reg.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package bottle.distributed.register.reg;

/**
 * 提供 动态注册于删除文件服务器信息接口
 * 提供客户端 获取有效文件服务器信息
 **/
public interface IFileServerCenterPrx extends Ice.ObjectPrx
{
    /**
     * 查询有效文件服务器地址
     **/
    public FSAddressInfo queryFileServerAddress();

    /**
     * 查询有效文件服务器地址
     * @param __ctx The Context map to send with the invocation.
     **/
    public FSAddressInfo queryFileServerAddress(java.util.Map<String, String> __ctx);

    /**
     * 查询有效文件服务器地址
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress();

    /**
     * 查询有效文件服务器地址
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(java.util.Map<String, String> __ctx);

    /**
     * 查询有效文件服务器地址
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(Ice.Callback __cb);

    /**
     * 查询有效文件服务器地址
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查询有效文件服务器地址
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(Callback_IFileServerCenter_queryFileServerAddress __cb);

    /**
     * 查询有效文件服务器地址
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(java.util.Map<String, String> __ctx, Callback_IFileServerCenter_queryFileServerAddress __cb);

    /**
     * 查询有效文件服务器地址
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(IceInternal.Functional_GenericCallback1<FSAddressInfo> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询有效文件服务器地址
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(IceInternal.Functional_GenericCallback1<FSAddressInfo> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询有效文件服务器地址
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<FSAddressInfo> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询有效文件服务器地址
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryFileServerAddress(java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<FSAddressInfo> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询有效文件服务器地址
     * @param __result The asynchronous result object.
     **/
    public FSAddressInfo end_queryFileServerAddress(Ice.AsyncResult __result);

    /**
     * 动态配置文件服务器地址信息
     **/
    public boolean dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered);

    /**
     * 动态配置文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered, java.util.Map<String, String> __ctx);

    /**
     * 动态配置文件服务器地址信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered);

    /**
     * 动态配置文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered, java.util.Map<String, String> __ctx);

    /**
     * 动态配置文件服务器地址信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered, Ice.Callback __cb);

    /**
     * 动态配置文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 动态配置文件服务器地址信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered, Callback_IFileServerCenter_dynamicRegistrationFileServerInfo __cb);

    /**
     * 动态配置文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, boolean isCovered, java.util.Map<String, String> __ctx, Callback_IFileServerCenter_dynamicRegistrationFileServerInfo __cb);

    /**
     * 动态配置文件服务器地址信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, 
                                                                   boolean isCovered, 
                                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 动态配置文件服务器地址信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, 
                                                                   boolean isCovered, 
                                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                   IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 动态配置文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, 
                                                                   boolean isCovered, 
                                                                   java.util.Map<String, String> __ctx, 
                                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 动态配置文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRegistrationFileServerInfo(FSAddressConfig[] list, 
                                                                   boolean isCovered, 
                                                                   java.util.Map<String, String> __ctx, 
                                                                   IceInternal.Functional_BoolCallback __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                   IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 动态配置文件服务器地址信息
     * @param __result The asynchronous result object.
     **/
    public boolean end_dynamicRegistrationFileServerInfo(Ice.AsyncResult __result);

    /**
     * 动态删除文件服务器地址信息
     **/
    public boolean dynamicRemoveFileServerInfo(FSAddressConfig[] list);

    /**
     * 动态删除文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public boolean dynamicRemoveFileServerInfo(FSAddressConfig[] list, java.util.Map<String, String> __ctx);

    /**
     * 动态删除文件服务器地址信息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list);

    /**
     * 动态删除文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, java.util.Map<String, String> __ctx);

    /**
     * 动态删除文件服务器地址信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, Ice.Callback __cb);

    /**
     * 动态删除文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 动态删除文件服务器地址信息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, Callback_IFileServerCenter_dynamicRemoveFileServerInfo __cb);

    /**
     * 动态删除文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, java.util.Map<String, String> __ctx, Callback_IFileServerCenter_dynamicRemoveFileServerInfo __cb);

    /**
     * 动态删除文件服务器地址信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, 
                                                             IceInternal.Functional_BoolCallback __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 动态删除文件服务器地址信息
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, 
                                                             IceInternal.Functional_BoolCallback __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 动态删除文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, 
                                                             java.util.Map<String, String> __ctx, 
                                                             IceInternal.Functional_BoolCallback __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 动态删除文件服务器地址信息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_dynamicRemoveFileServerInfo(FSAddressConfig[] list, 
                                                             java.util.Map<String, String> __ctx, 
                                                             IceInternal.Functional_BoolCallback __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 动态删除文件服务器地址信息
     * @param __result The asynchronous result object.
     **/
    public boolean end_dynamicRemoveFileServerInfo(Ice.AsyncResult __result);
}
